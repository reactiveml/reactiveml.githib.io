type 'a tree =
| Empty
| Node of 'a tree * 'a * 'a tree

let rec preorder f t = match t with
| Empty -> ()
| Node(l, v, r) ->
   f v; preorder f l; preorder f r

let t =
  Node (Node (Node (Empty, 4, Empty),
              2,
              Empty),
        1,
        Node (Node (Empty, 5, Empty),
              3,
              Node (Node (Empty, 7, Empty),
                    6,
                    Node (Empty, 8, Empty))))

let process main =
  preorder (fun x -> print_int x; print_newline ()) t
