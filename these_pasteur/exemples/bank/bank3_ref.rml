open Agents

type cmd = Put of int | Info | Take of int
type answer = Balance of int | Status of bool

let process bank self () =
  let counter = ref 0 in
  run react self
    begin proc msg return -> match msg with
    | Put x -> counter := !counter + x
    | Info -> return (Balance !counter)
    | Take x ->
        if x <= !counter then
          (counter := !counter - x; return (Status true))
        else
          return (Status false)
    end
  ||
  loop
    for i=1 to 11 do pause done;
    counter := int_of_float (1.03 *. (float_of_int !counter));
    pause
  end

let process main =
  let b_p, b = run mk_agent "bank" bank in
  run b_p ()
  ||
  b << (Put 10)
  ||
  begin
    pause;
    let Status res = run send_and_wait b (Take 6) in
    if res then print_endline "Retrait OK" else print_endline "Retrait impossible";
    let Balance count = run send_and_wait b Info in
    print_endline ("Solde: "^string_of_int count);
    kill b
  end
  ||
  begin
    pause;
    let Status res = run send_and_wait b (Take 6) in
    if res then print_endline "Retrait OK" else print_endline "Retrait impossible"
  end
